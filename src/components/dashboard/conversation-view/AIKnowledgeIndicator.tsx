import { Badge } from "@/components/ui/badge";
import { Brain, Sparkles, FileText } from "lucide-react";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";

interface AIKnowledgeIndicatorProps {
  source: 'ai_suggestion' | 'template' | 'knowledge_base' | null;
  qualityScore?: number;
}

export function AIKnowledgeIndicator({ source, qualityScore }: AIKnowledgeIndicatorProps) {
  if (!source) return null;

  const getIndicatorConfig = () => {
    switch (source) {
      case 'ai_suggestion':
        return {
          icon: Sparkles,
          label: 'AI Generated',
          color: 'bg-blue-500/10 text-blue-600 border-blue-500/20',
          tooltip: 'This response was generated by AI'
        };
      case 'template':
        return {
          icon: FileText,
          label: 'Template',
          color: 'bg-purple-500/10 text-purple-600 border-purple-500/20',
          tooltip: 'This response uses a saved template'
        };
      case 'knowledge_base':
        return {
          icon: Brain,
          label: 'Knowledge Base',
          color: 'bg-green-500/10 text-green-600 border-green-500/20',
          tooltip: 'This response comes from the knowledge base'
        };
      default:
        return null;
    }
  };

  const config = getIndicatorConfig();
  if (!config) return null;

  const Icon = config.icon;

  return (
    <TooltipProvider>
      <Tooltip>
        <TooltipTrigger asChild>
          <Badge variant="outline" className={`${config.color} flex items-center gap-1`}>
            <Icon className="w-3 h-3" />
            {config.label}
            {qualityScore !== undefined && qualityScore > 0 && (
              <span className="text-xs">({qualityScore.toFixed(1)})</span>
            )}
          </Badge>
        </TooltipTrigger>
        <TooltipContent>
          <p>{config.tooltip}</p>
          {qualityScore !== undefined && qualityScore > 0 && (
            <p className="text-xs text-muted-foreground mt-1">
              Quality Score: {qualityScore.toFixed(2)}/5.0
            </p>
          )}
        </TooltipContent>
      </Tooltip>
    </TooltipProvider>
  );
}
